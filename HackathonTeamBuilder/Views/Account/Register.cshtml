@model HackathonTeamBuilder.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    var roleDropdownItems = HackathonTeamBuilder.Models.Helper.GetRoleSelectList();
}

<main aria-labelledby="title">
    <h2 id="title">@ViewBag.Title.</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create a new account.</h4>
        <hr />

        <div class="row">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            @Html.LabelFor(m => m.FullName, "Full Name", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Bio, "Bio", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.Bio, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Bio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.LinkedinUrl, "LinkedIn URL", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.LinkedinUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LinkedinUrl, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.GithubUrl, "GitHub URL", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.GithubUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GithubUrl, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.PortfolioUrl, "Portfolio URL", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PortfolioUrl, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PortfolioUrl, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Role, "Role", new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Role, roleDropdownItems, new { @class = "form-select  bg-dark text-white" })
                @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="offset-md-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-outline-dark" />
            </div>
        </div>
    }
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
